@using JiraFinalApp201.Models.Tasks
@using JiraFinalApp201.ViewModels
@model (string Title, string ColumnCss, int Status, List<TaskViewModel> Tasks)

<div class="@Model.ColumnCss">
    <div class="p-2">
        @{
            string headerClass = "";
            string containerClass = "";
            string columnTitle = "";
            
            switch (Model.Status)
            {
                case 0: // ToDo
                    headerClass = "todo";
                    containerClass = "todo-container";
                    columnTitle = "To Do";
                    break;
                case 1: // InProgress
                    headerClass = "in-progress";
                    containerClass = "in-progress-container";
                    columnTitle = "In Progress";
                    break;
                case 2: // Done
                    headerClass = "done";
                    containerClass = "done-container";
                    columnTitle = "Done";
                    break;
                case 3: // Blocked
                    headerClass = "blocked";
                    containerClass = "blocked-container";
                    columnTitle = "Blocked";
                    break;
            }
        }
        
        <div class="board-column-header @headerClass">
            <div class="d-flex justify-content-between align-items-center">
                <span>@columnTitle</span>
                <span class="badge bg-white text-dark">@(Model.Tasks?.Count() ?? 0)</span>
            </div>
        </div>
        <div class="task-container @containerClass" data-status="@Model.Status">
            @if (Model.Tasks != null && Model.Tasks.Any())
            {
                foreach (var task in Model.Tasks)
                {
                    @await Html.PartialAsync("~/Views/Shared/PartialViews/_TaskCard.cshtml", task)
                }
            }
           
        </div>
    </div>
</div>
